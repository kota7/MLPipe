% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/box-cox.R
\name{box_cox_transform}
\alias{BoxCoxTransform}
\alias{box_cox_transform}
\title{Box-Cox Transformation}
\description{
Conduct Box-Cox Transformation. This can be used as
\itemize{
\item{an estimation process where data are fitted to the linear regression model of the transformed variable; or}
\item{a transformer that transforms dependent variable}
}
Transformation parameters can be fixed by users, or estimated by the maximum likelihood.
}
\section{Usage}{

\preformatted{box_cox_transform(lambda = 1, lambda2 = NULL,
  skipfit = FALSE, tol = 1e-5)}
}

\section{Arguments}{

\describe{
\item{lambda}{initial value for lambda parameter}
\item{lambda2}{initial value for lambda2 parameter or logical that indicates if lambda2 should be estimated. If \code{NULL} or \code{FALSE}, then lambda2 is fixed to 0}
\item{skipfit}{logical. If TRUE, \code{fit} method does nothing and the parameters are fixed to the initial values.}
\item{tol}{lambda smaller than this level is regarded as 0 and log function is applied}
}
}

\section{Value}{

\code{BoxCoxTransform} class object
}

\section{Class Attributes}{

\describe{
\item{beta}{regression coefficients}
}
}

\section{Class Methods}{

\describe{
\item{\preformatted{fit(x = NULL, y)}}{if \code{skipfit} is \code{FALSE}, then estimate the lambda parameter(s) by the maximum likelihood, otherwise, the parameters are fixed. In either case, regression coeffients beta are estimated by the least squares}
\item{\preformatted{transform(x = NULL, y)}}{transform \code{y} and returns list of \code{x} and \code{y}}
\item{\preformatted{inv_transform(x = NULL, y)}}{inverse transform \code{y} and returns list of \code{x} and \code{y}}
\item{\preformatted{predict(x, ...)}}{return predicted values of \code{y} in the pre-transfom scale}
\item{\preformatted{incr_fit(x, y)}}{not available}
}
}

\section{Details}{

uses \code{\link[geoR]{boxcoxfit}} as the backend paramter estimator
}
\examples{
simul <- geoR::rboxcox(100, lambda=0.5, mean=10, sd=2)
b <- box_cox_transform()
b$fit(y=simul)
cat(b$lambda, '\\n')

b <- box_cox_transform(lambda2=TRUE)
b$fit(y=seq(-1, 1, 1/20))
cat(b$lambda, b$lambda2, '\\n')

data(trees)
b <- box_cox_transform()
x <- trees[,1:2]
y <- trees[,3]
b$fit(x, y)
pred <- b$predict(x)$y
cor(y, pred)
\dontrun{
plot(y, pred)}

b <- box_cox_transform(lambda=0, skipfit=TRUE)
b$fit(y=1:10)
cat(b$lambda, b$beta, '\\n')
}

